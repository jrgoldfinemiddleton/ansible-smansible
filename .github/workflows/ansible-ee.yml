---
name: Ansible Execution Environment (EE)

on:  # yamllint disable-line rule:truthy
  pull_request:
    paths:
      - ".github/workflows/ansible-ee.yml"
      - "environments/**"
      - "inventory"
      - "playbooks/test.yml"
      - "projects/digital_ocean/**"

jobs:
  cache-python-dependencies:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
          cache: pip

      - name: Upgrade pip
        run: pip install --upgrade pip setuptools wheel

      - name: Install Python libraries
        run: pip install -r requirements.txt

  build-ansible-ee:
    runs-on: ubuntu-22.04
    needs: cache-python-dependencies
    strategy:
      fail-fast: false
      matrix:
        ansible-version: ["2.9", "2.10", "2.11", "2.12"]
    env:
      ANSIBLE_VERSION: ${{ matrix.ansible-version }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
          cache: pip

      - name: Upgrade pip
        run: pip install --upgrade pip setuptools wheel

      - name: Install Python libraries
        run: pip install -r requirements.txt

      - name: Build Ansible EE for Ansible v${{ matrix.ansible-version }}
        run: |
          cd environments/ansible-v${ANSIBLE_VERSION}
          ansible-builder build \
            --verbosity=3 \
            --tag=ansible-v${ANSIBLE_VERSION}-ee \
            --container-runtime=docker \
            --prune-images

      - name: Test EE for Ansible v${{ matrix.ansible-version }} with a module
        run: |
          ansible-runner run . \
            --process-isolation \
            --process-isolation-executable=docker \
            --container-image=ansible-v${ANSIBLE_VERSION}-ee \
            --hosts=localhost \
            --module=debug \
            --args msg=hello

      - name: Test EE for Ansible v${{ matrix.ansible-version }} with a playbook using ansible-runner
        run: |
          ansible-runner run . \
            --process-isolation \
            --process-isolation-executable=docker \
            --container-image=ansible-v${ANSIBLE_VERSION}-ee \
            --container-volume-mount '.:/dummy' \
            --playbook=/dummy/playbooks/test.yml

      - name: Test EE for Ansible v${{ matrix.ansible-version }} with a playbook using ansible-navigator
        run: |
          ansible-navigator run \
            --container-engine=docker \
            --execution-environment-image=ansible-v${ANSIBLE_VERSION}-ee \
            --pull-policy=missing \
            --mode=stdout \
            playbooks/test.yml

      - name: Create Ansible vault password script for DigitalOcean
        if: matrix.ansible-version == '2.12'
        run: |
          echo '#!/bin/sh' > projects/digital_ocean/vault.sh
          echo 'echo ${ANSIBLE_VAULT_DIGITAL_OCEAN}' >> projects/digital_ocean/vault.sh
          chmod +x projects/digital_ocean/vault.sh

      - name: Deploy DigitalOcean cloud environment
        env:
          ANSIBLE_VAULT_DIGITAL_OCEAN: "${{ secrets.ANSIBLE_VAULT_DIGITAL_OCEAN }}"
          DO_API_TOKEN: "${{ secrets.DO_API_TOKEN }}"
        if: matrix.ansible-version == '2.12'
        run: |
          cd projects/digital_ocean
          ansible-navigator run \
            --container-engine=docker \
            --execution-environment-image=ansible-v${ANSIBLE_VERSION}-ee \
            --pull-policy=missing \
            --mode=stdout \
            --pass-environment-variable='ANSIBLE_VAULT_DIGITAL_OCEAN' \
            --pass-environment-variable='DO_API_TOKEN' \
            -vvv \
            deploy.yml

      - name: Create Ansible vault password script for AWX
        if: matrix.ansible-version == '2.12'
        run: |
          echo '#!/bin/sh' > projects/awx/vault.sh
          echo 'echo ${ANSIBLE_VAULT_AWX_DO}' >> projects/awx/vault.sh
          chmod +x projects/awx/vault.sh

      - name: Configure AWX hosted in DigitalOcean Kubernetes cluster
        if: matrix.ansible-version == '2.12'
        run: |
          cd projects/awx
          ansible-navigator run \
            --container-engine=docker \
            --execution-environment-image=ansible-v${ANSIBLE_VERSION}-ee \
            --pull-policy=missing \
            --mode=stdout \
            -vvv \
            configure_controller.yml
